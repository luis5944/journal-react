{"version":3,"sources":["hooks/useForm.js","types/types.js","firebase/firebase-config.js","components/actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","components/actions/notes.js","components/actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/SideBar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","e","target","name","value","types","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","msg","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","activeNotes","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","userCred","login","user","displayName","catch","icon","text","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","SideBar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","activeNote","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PrivateRoute","isLoggedIn","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0e3df1bc.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\n//Custom Hook para mantener un formulario donde le pasamos un objeto\r\nexport const useForm = (initialState = {}) => {\r\n  //Creamos el useState para modificar y recoger los valores del formulario\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  //funcion para reiniciar el formulario\r\n  const reset = (newFormState = initialState) => {\r\n    setValues(newFormState);\r\n  };\r\n\r\n  //funcion para cada vez que cambia uno de los valores\r\n  //1º Coges todos los valores\r\n  //2º coges por el target del nombre (email, password, nombre etc) y será igual al valor\r\n  const handleInputChange = (e) => {\r\n   \r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Devolvemos en un array\r\n  return [values, handleInputChange, reset];\r\n};\r\n","export const types = {\r\n  login: \"[Auth] login\",\r\n  logout: \"[Auth] logout\",\r\n\r\n  uiSetError: \"[UI] Set Error\",\r\n  uiRemoveError: \"[UI] Remove Error\",\r\n\r\n  uiStartLoading: \"[UI] Start loading\",\r\n  uiFinishLoading: \"[UI] Finish loading\",\r\n\r\n  notesAddNew: \"[Notes] New note\",\r\n  notesActive: \"[Notes] Set active note\",\r\n  notesLoad: \"[Notes] Load notes\",\r\n  notesUpdated: \"[Notes] Update note\",\r\n  notesFileUrl: \"[Notes] Updated image url\",\r\n  notesDelete: \"[Notes] Delete note\",\r\n  notesLogoutCleaning: \"[Notes] Logout Cleaning\",\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCzulxPof5TtF9fFGlbt8l_0El1FRKlp_k\",\r\n  authDomain: \"journal-react-curso.firebaseapp.com\",\r\n  databaseURL: \"https://journal-react-curso.firebaseio.com\",\r\n  projectId: \"journal-react-curso\",\r\n  storageBucket: \"journal-react-curso.appspot.com\",\r\n  messagingSenderId: \"125354998896\",\r\n  appId: \"1:125354998896:web:e7140fe3276a2e258c88b5\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n//referencia a firestore\r\nconst db = firebase.firestore();\r\n//autentificacion con\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, googleAuthProvider, firebase };\r\n","import { types } from \"../../types/types\";\r\n\r\nexport const setError = (msg) => {\r\n  return {\r\n    type: types.uiSetError,\r\n    payload: msg,\r\n  };\r\n};\r\nexport const removeError = () => {\r\n  return {\r\n    type: types.uiRemoveError,\r\n  };\r\n};\r\n\r\nexport const startLoading = () => {\r\n  return {\r\n    type: types.uiStartLoading,\r\n  };\r\n};\r\nexport const finishLoading = () => {\r\n  return {\r\n    type: types.uiFinishLoading,\r\n  };\r\n};\r\n","import { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadNotes = async (uid) => {\r\n  const notesSnap = await db.collection(`/${uid}/journal/notes`).get();\r\n  const notes = [];\r\n\r\n  notesSnap.forEach((snapHijo) => {\r\n    notes.push({\r\n      id: snapHijo.id,\r\n      ...snapHijo.data(),\r\n    });\r\n  });\r\n\r\n  return notes;\r\n};\r\n","export const fileUpload = async (file) => {\r\n  const cloudUrl = `https://api.cloudinary.com/v1_1/dcg9j5tty/upload`;\r\n  const formData = new FormData();\r\n\r\n  formData.append(\"upload_preset\", \"react-journal\");\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const resp = await fetch(cloudUrl, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (resp.ok) {\r\n      const cloudResp = await resp.json();\r\n      return cloudResp.secure_url;\r\n    } else {\r\n      throw await resp.json;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","import { db } from \"../../firebase/firebase-config\";\r\nimport { types } from \"../../types/types\";\r\nimport { loadNotes } from \"../../helpers/loadNotes\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () => {\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    const newNote = {\r\n      title: \"\",\r\n      body: \"\",\r\n      date: new Date().getTime(),\r\n    };\r\n\r\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n    dispatch(activeNotes(doc.id, newNote));\r\n    dispatch(addNewNote(doc.id, newNote));\r\n  };\r\n};\r\n\r\nexport const activeNotes = (id, note) => {\r\n  return {\r\n    type: types.notesActive,\r\n    payload: {\r\n      id,\r\n      ...note,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addNewNote = (id, note) => {\r\n  return {\r\n    type: types.notesAddNew,\r\n    payload: {\r\n      id: id,\r\n      ...note,\r\n    },\r\n  };\r\n};\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n  return async (dispatch) => {\r\n    const notes = await loadNotes(uid);\r\n    dispatch(setNotes(notes));\r\n  };\r\n};\r\n\r\nexport const setNotes = (notes) => {\r\n  return {\r\n    type: types.notesLoad,\r\n    payload: notes,\r\n  };\r\n};\r\n\r\nexport const startSaveNote = (note) => {\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    if (!note.url) {\r\n      delete note.url;\r\n    }\r\n    const noteToFirestore = { ...note };\r\n    delete noteToFirestore.id;\r\n\r\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n    dispatch(refreshNote(note.id, note));\r\n\r\n    Swal.fire(\"Entry Saved!\", note.title, \"success\");\r\n  };\r\n};\r\n\r\nexport const refreshNote = (id, note) => {\r\n  return {\r\n    type: types.notesUpdated,\r\n    payload: {\r\n      id: id,\r\n      note: { id, ...note },\r\n    },\r\n  };\r\n};\r\n\r\nexport const startUploading = (file) => {\r\n  return async (dispatch, getState) => {\r\n    const { active: activeNote } = getState().notes;\r\n\r\n    Swal.fire({\r\n      title: \"Uploading...\",\r\n      text: \"Please Wait...\",\r\n      allowOutsideClick: false,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n\r\n    const fileUrl = await fileUpload(file);\r\n    activeNote.url = fileUrl;\r\n    dispatch(startSaveNote(activeNote));\r\n    Swal.close();\r\n  };\r\n};\r\n\r\nexport const startDeleting = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n\r\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n    dispatch(deleteNote(id));\r\n  };\r\n};\r\n\r\nexport const deleteNote = (id) => {\r\n  return {\r\n    type: types.notesDelete,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const noteLogout = () => {\r\n  return {\r\n    type: types.notesLogoutCleaning,\r\n  };\r\n};\r\n","import { types } from \"../../types/types\";\r\nimport { firebase, googleAuthProvider } from \"../../firebase/firebase-config\";\r\nimport { startLoading, finishLoading } from \"./ui\";\r\nimport Swal from \"sweetalert2\";\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userCred) => {\r\n        dispatch(login(userCred.user.uid, userCred.user.displayName));\r\n        dispatch(finishLoading());\r\n      })\r\n      .catch((e) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: e.message,\r\n        });\r\n        dispatch(finishLoading());\r\n      });\r\n  };\r\n};\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async (userCred) => {\r\n        await userCred.user.updateProfile({ displayName: name });\r\n        dispatch(login(userCred.user.uid, userCred.user.displayName));\r\n      })\r\n      .catch((e) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: e.message,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then((userCred) => {\r\n        dispatch(login(userCred.user.uid, userCred.user.displayName));\r\n      });\r\n  };\r\n};\r\n\r\nexport const login = (uid, displayName) => {\r\n  return {\r\n    type: types.login,\r\n    payload: {\r\n      uid: uid,\r\n      displayName: displayName,\r\n    },\r\n  };\r\n};\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n    dispatch(logout());\r\n    dispatch(noteLogout());\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return { type: types.logout };\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLoginEmailPassword, startGoogleLogin } from \"../actions/auth\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.ui);\r\n  \r\n  const [formValues, handleInputChange] = useForm({\r\n    email: \"a@a.com\",\r\n    password: \"1212\",\r\n  });\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLoginEmailPassword(email, password));\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    dispatch(startGoogleLogin());\r\n  };\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Login</h3>\r\n      <form  className= \"animate__animated animate__fadeIn animate_faster\" onSubmit={handleLogin}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <button\r\n          className=\"btn btn-block btn-primary\"\r\n          type=\"submit\"\r\n          disabled={loading}\r\n        >\r\n          Login\r\n        </button>\r\n\r\n        <div className=\"auth__social\">\r\n          <p>Login with social networks</p>\r\n          <div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n            <div className=\"google-icon-wrapper\">\r\n              <img\r\n                className=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"google button\"\r\n              />\r\n            </div>\r\n            <p className=\"btn-text\">\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <Link className=\"link\" to=\"/auth/register\">\r\n          Create New Account\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport validator from \"validator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setError, removeError } from \"../actions/ui\";\r\nimport { startRegisterWithEmailPasswordName } from \"../actions/auth\";\r\n\r\nexport const RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { msgError } = useSelector((state) => state.ui);\r\n\r\n  const [formValues, handleInputChange, reset] = useForm({\r\n    name: \"Luis\",\r\n    email: \"luis5944@gmail.com\",\r\n    password: \"852456\",\r\n    password2: \"852456\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    if (isFormValid()) {\r\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n    }\r\n    reset();\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (name.trim().length === 0) {\r\n      dispatch(setError(\"Name is required\"));\r\n      return false;\r\n    } else if (!validator.isEmail(email)) {\r\n      dispatch(setError(\"Email is not valid\"));\r\n      return false;\r\n    } else if (password !== password2 || password.length < 5) {\r\n      dispatch(setError(\"Password should be at least 6 chars and equal\"));\r\n      return false;\r\n    }\r\n    //remove\r\n    dispatch(removeError());\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Register</h3>\r\n      <form className= \"animate__animated animate__fadeIn animate_faster\" onSubmit={handleRegister}>\r\n        {msgError ? <div className=\"auth__alert-error\">{msgError}</div> : \"\"}\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"password2\"\r\n          className=\"auth__input\"\r\n          value={password2}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button className=\"btn btn-block btn-primary  mb-5\" type=\"submit\">\r\n          Register\r\n        </button>\r\n        <Link className=\"link\" to=\"/auth/login\">\r\n          Already Registered?\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div className=\"auth__main\">\r\n      <div className=\"auth__box-container\">\r\n        <Switch>\r\n          <Route path=\"/auth/login\" component={LoginScreen} />\r\n          <Route path=\"/auth/register\" component={RegisterScreen} />\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activeNotes } from \"../actions/notes\";\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n  const noteDate = moment(date);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEntryClick = () => {\r\n    //en notes activeNote\r\n    dispatch(\r\n      activeNotes(id, {\r\n        date,\r\n        title,\r\n        body,\r\n        url,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div\r\n      onClick={handleEntryClick}\r\n      className=\"journal__entry pointer animate__animated animate__fadeIn animate_faster\"\r\n    >\r\n      {url && (\r\n        <div\r\n          className=\"journal__entry-picture\"\r\n          style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(${url})`,\r\n          }}\r\n        ></div>\r\n      )}\r\n\r\n      <div className=\"journal__entry-body\">\r\n        <p className=\"journal_entry-title\">{title}</p>\r\n        <p className=\"journal_entry-content\">{body}</p>\r\n      </div>\r\n      <div className=\"journal__entry-date-box\">\r\n        <span>{noteDate.format(\"dddd\")}</span>\r\n        <h4>{noteDate.format(\"Do\")}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { JournalEntry } from \"./JournalEntry\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const JournalEntries = () => {\r\n\r\nconst {notes} = useSelector(state => state.notes);\r\n\r\n\r\n  return (\r\n    <div className=\"journal__entries \">\r\n      {notes.map((note) => {\r\n        return <JournalEntry key={note.id} {...note} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { JournalEntries } from \"./JournalEntries\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../actions/auth\";\r\nimport { startNewNote } from \"../actions/notes\";\r\n\r\nexport const SideBar = () => {\r\n  const { name } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    dispatch(startNewNote());\r\n  };\r\n\r\n  return (\r\n    <aside className=\"journal__sidebar\">\r\n      <div className=\"journal__sidebar-navbar\">\r\n        <h3 className=\"mt-5\">\r\n          <i className=\"far fa-moon\"></i>\r\n          <span> {name}</span>\r\n        </h3>\r\n\r\n        <button className=\"btn\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"journal__new-entry\" onClick={handleAddNew}>\r\n        <i className=\"far fa-calendar-plus fa-5x \"></i>\r\n        <p className=\"mt-5\">New Entry</p>\r\n      </div>\r\n\r\n      <JournalEntries />\r\n    </aside>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startSaveNote, startUploading } from \"../actions/notes\";\r\n\r\nexport const NotesAppBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { active } = useSelector((state) => state.notes);\r\n\r\n  const handleSave = () => {\r\n    dispatch(startSaveNote(active));\r\n  };\r\n\r\n  const handlePictureClick = () => {\r\n    document.querySelector(\"#fileselector\").click();\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      dispatch(startUploading(file));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes__appbar\">\r\n      <span>28 de Agosto 2020</span>\r\n\r\n      <input\r\n        id=\"fileselector\"\r\n        type=\"file\"\r\n        name=\"file\"\r\n        style={{ display: \"none\" }}\r\n        onChange={handleFileChange}\r\n      />\r\n      <div>\r\n        <button onClick={handlePictureClick} className=\"btn\">\r\n          Picture\r\n        </button>\r\n        <button onClick={handleSave} className=\"btn\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { NotesAppBar } from \"./NotesAppBar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { activeNotes, startDeleting } from \"../actions/notes\";\r\n\r\nexport const NoteScreen = () => {\r\n  const dispatch = useDispatch();\r\n  //Referencia a la nota activa (la renombramos)\r\n  const { active: note } = useSelector((state) => state.notes);\r\n\r\n  //utilizamos el custom hook y cogemos toda la informacion de la nota activa\r\n  const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n  const activeId = useRef(note.id);\r\n  useEffect(() => {\r\n    if (note.id !== activeId.current) {\r\n      reset(note);\r\n      activeId.current = note.id;\r\n    }\r\n  }, [note, reset]);\r\n\r\n  const { body, title, id } = formValues;\r\n\r\n  useEffect(() => {\r\n    dispatch(activeNotes(formValues.id, { ...formValues }));\r\n  }, [formValues, dispatch]);\r\n\r\n  const handleDelete = () => {\r\n    dispatch(startDeleting(id));\r\n  };\r\n  return (\r\n    <div className=\"notes__main-content\">\r\n      <NotesAppBar />\r\n      <div className=\"notes__content\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          className=\"notes__title-input\"\r\n          autoComplete=\"off\"\r\n          value={title}\r\n          onChange={handleInputChange}\r\n        ></input>\r\n\r\n        <textarea\r\n          name=\"body\"\r\n          placeholder=\"Tell me your day\"\r\n          className=\"notes__textarea\"\r\n          value={body}\r\n          onChange={handleInputChange}\r\n        ></textarea>\r\n      </div>\r\n      {note.url && (\r\n        <div className=\"notes__image\">\r\n          <img src={note.url} alt=\"imagen\" />\r\n        </div>\r\n      )}\r\n\r\n      <button className=\"btn btn-danger\" onClick={handleDelete}>\r\n        {\" \"}\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const NothingSelected = () => {\r\n  return (\r\n    <div className=\"nothing__main-content\">\r\n      <p>\r\n        Select Something\r\n        <span> Or </span>\r\n        Create an Entry\r\n      </p>\r\n      <i className=\"far fa-star fa-4x mt-5\"></i>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SideBar } from \"./SideBar\";\r\nimport { NoteScreen } from \"../notes/NoteScreen\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NothingSelected } from \"./NothingSelected\";\r\n\r\nexport const JournalScreen = () => {\r\n  const { active } = useSelector((state) => state.notes);\r\n\r\n  return (\r\n    <div className=\"journal__main-content animate__animated animate__fadeIn animate_faster\" >\r\n      <SideBar />\r\n\r\n      <main>{active ? <NoteScreen /> : <NothingSelected />}</main>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) => {\r\n        return isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/auth/login\" />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) => {\r\n        return !isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport firebase from \"firebase/app\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../components/actions/auth\";\r\nimport { useState } from \"react\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { startLoadingNotes } from \"../components/actions/notes\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [checking, setChecking] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      //si el uid existe\r\n      if (user?.uid) {\r\n        dispatch(login(user.uid, user.displayName));\r\n        setIsLoggedIn(true);\r\n\r\n        dispatch(startLoadingNotes(user.uid));\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      setChecking(false);\r\n    });\r\n  }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n  if (checking) {\r\n    return <h1>Wait...</h1>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            isLoggedIn={isLoggedIn}\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n          />\r\n          <PrivateRoute\r\n            isLoggedIn={isLoggedIn}\r\n            exact\r\n            path=\"/\"\r\n            component={JournalScreen}\r\n          />\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: \"\",\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload,\r\n      };\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null,\r\n      };\r\n\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  active: null,\r\n};\r\nexport const notesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.notesActive:\r\n      return {\r\n        ...state,\r\n        active: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case types.notesAddNew:\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes],\r\n      };\r\n\r\n    case types.notesLoad:\r\n      return {\r\n        ...state,\r\n        notes: [...action.payload],\r\n      };\r\n\r\n    case types.notesUpdated:\r\n      return {\r\n        ...state,\r\n        notes: state.notes.map((note) =>\r\n          note.id === action.payload.id ? action.payload.note : note\r\n        ),\r\n      };\r\n\r\n    case types.notesDelete:\r\n      return {\r\n        ...state,\r\n        active: null,\r\n        notes: state.notes.filter((note) => note.id !== action.payload),\r\n      };\r\n\r\n    case types.notesLogoutCleaning:\r\n      return {\r\n        ...state,\r\n        active: null,\r\n        notes: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  notes: notesReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName,\r\n      };\r\n\r\n    case types.logout:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const JournalApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport ReactDOM from \"react-dom\";\r\nimport { JournalApp } from './JournalApp';\r\n\r\nimport \"./styles/styles.scss\";\r\n\r\n\r\nReactDOM.render(\r\n    <JournalApp />,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}